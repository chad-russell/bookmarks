---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bookmark-data-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  # Uncomment and modify storageClassName if needed
  # storageClassName: your-storage-class

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookmark-app
  namespace: default
  labels:
    app: bookmark-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookmark-app
  template:
    metadata:
      labels:
        app: bookmark-app
    spec:
      containers:
        - name: bookmark-app
          image: your-registry/bookmark-app:latest
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NODE_ENV
              value: 'production'
            - name: PORT
              value: '3000'
            - name: HOSTNAME
              value: '0.0.0.0'
          volumeMounts:
            - name: bookmark-data
              mountPath: /app/data
          livenessProbe:
            httpGet:
              path: /api/bookmarks
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/bookmarks
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              memory: '128Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '500m'
      volumes:
        - name: bookmark-data
          persistentVolumeClaim:
            claimName: bookmark-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: bookmark-app-service
  namespace: default
  labels:
    app: bookmark-app
spec:
  selector:
    app: bookmark-app
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  type: ClusterIP

---
# Optional: Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bookmark-app-ingress
  namespace: default
  annotations:
    # Modify these annotations based on your ingress controller
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  # Uncomment for TLS
  # tls:
  # - hosts:
  #   - your-domain.com
  #   secretName: bookmark-app-tls
  rules:
    - host: your-domain.com # Replace with your actual domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bookmark-app-service
                port:
                  number: 80
